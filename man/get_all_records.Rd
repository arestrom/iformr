% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/page_records.R
\name{get_all_records}
\alias{get_all_records}
\title{Get all records for a set of fields in a page (i.e., form, or
  subform)}
\usage{
get_all_records(server_name, profile_id, page_id, fields = "fields",
  limit = 1000, offset = 0, access_token, field_string, since_id)
}
\arguments{
\item{server_name}{The server name as encoded in the url:
`https//server_name.iformbuilder.com`}

\item{profile_id}{The id number of your profile}

\item{page_id}{The id of the form or subform}

\item{fields}{A set of data fields (columns) to return}

\item{limit}{The maximum number of records to return}

\item{offset}{Skips the offset number of records before beginning to return}

\item{access_token}{The access_token required to establish communication
with the API}

\item{field_string}{A character string defining the data fields to return,
including the id value where data retrieval should start. See the example
above for how to define the \code{parent_form_fields} string when using
the \code{get_selected_page_records()} function.}

\item{since_id}{The id value defining the first record to retrieve.}
}
\value{
A dataframe of records for the specified fields (columns)
}
\description{
Sends a request to the iFormBuilder API to get all records in a
  given form or subform for a specific set of fields (columns). This function
  can be used to exceed the API limit of 1000 records per request. Specify how
  many records to retrieve  (< 1000) using the \code{limit} parameter. Specify
  how many records to skip before starting to retrieve using the \code{offset}
  parameter.
}
\details{
This function should be used with caution. It should only be used in
  those rare cases when you know that there are more than 1000 records that
  need to be retrieved in a single call. Be observant for warnings. It may
  on occassion throw errors.
}
\section{Warning}{
 This function should \strong{only} be used to request
  records from one form or subform at a time. \strong{Do not} assume it will
  work if records from more than one form are incorporated in the
  \code{fields} parameter. If you request multiple fields but the function
  only returns the id value, and does not throw an error, this is a strong
  indication that you did not specify the fields correctly. You may have
  requested a field that does not exist.
}

\examples{
#' # Specify the fields (columns) to be returned
field_list <- c(
 "surveyors", "survey_start_datetime", "survey_method",
 "stream", "survey_end_time")

# Collapse vector of column names into a single string
form_fields <- paste(field_list, collapse = ',')
\dontrun{
# Set id to ascending order and pull only records greater than the last_id
since_id <- 5
field_string <- paste0("id:<(>\\"", since_id, "\\"),", form_fields)

# Get access_token
access_token <- get_iform_access_token(
  server_name = "your_server_name",
  client_key_name = "your_client_key_name",
  client_secret_name = "your_client_secret_name")

# Get the id of a single form in the profile given the form name
form_id <- get_page_id(
  server_name = "your_server_name",
  profile_id = 123456,
  page_name = "your_form_p",
  access_token = access_token)

# Get all existing records for a set of columns from a form or subform
parent_form_records <- get_all_records(
  server_name = "your_server_name",
  profile_id = 123456,
  page_id = form_id,
  fields = "fields",
  limit = 1000,
  offset = 0,
  access_token = access_token,
  field_string,
  since_id)
}
}
